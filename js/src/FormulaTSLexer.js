// Generated from /Users/dong/yzfworkbench/formula-compile/java/FormulaTS.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002%\u00ec\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0003\u0002",
    "\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b",
    "\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003",
    "\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e\u0003",
    "\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003",
    "\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0018\u0003",
    "\u0019\u0003\u0019\u0003\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0003",
    "\u001b\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001d\u0003",
    "\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003",
    "\u001f\u0006\u001f\u00a5\n\u001f\r\u001f\u000e\u001f\u00a6\u0003\u001f",
    "\u0005\u001f\u00aa\n\u001f\u0003\u001f\u0007\u001f\u00ad\n\u001f\f\u001f",
    "\u000e\u001f\u00b0\u000b\u001f\u0003 \u0006 \u00b3\n \r \u000e \u00b4",
    "\u0003!\u0003!\u0007!\u00b9\n!\f!\u000e!\u00bc\u000b!\u0003!\u0003!",
    "\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003#\u0003#\u0003#\u0003",
    "#\u0003$\u0003$\u0003$\u0003$\u0003$\u0003%\u0006%\u00cf\n%\r%\u000e",
    "%\u00d0\u0003%\u0006%\u00d4\n%\r%\u000e%\u00d5\u0003&\u0007&\u00d9\n",
    "&\f&\u000e&\u00dc\u000b&\u0003\'\u0006\'\u00df\n\'\r\'\u000e\'\u00e0",
    "\u0003\'\u0003\'\u0003(\u0003(\u0006(\u00e7\n(\r(\u000e(\u00e8\u0003",
    "(\u0003(\u0002\u0002)\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+",
    "\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u00029\u0002;\u001d=\u001e",
    "?\u001fA C!E\"G#I\u0002K\u0002M$O%\u0003\u0002\n\u0003\u00022;\b\u0002",
    "2;C\\aac|\u3003\u3003\u4e02\u9fa7\u0004\u0002$$))\u0005\u0002\f\f\u000f",
    "\u000f))\u0003\u0002C\\\u0003\u0002\u007f\u007f\u0005\u0002\u000b\f",
    "\u000f\u000f\"\"\u0007\u0002//2;C\\aac|\u0002\u00f1\u0002\u0003\u0003",
    "\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003",
    "\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003",
    "\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003",
    "\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003",
    "\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003",
    "\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003",
    "\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003",
    "\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002",
    "\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002",
    "\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002\u0002",
    "\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002\u0002",
    "1\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00025\u0003",
    "\u0002\u0002\u0002\u0002;\u0003\u0002\u0002\u0002\u0002=\u0003\u0002",
    "\u0002\u0002\u0002?\u0003\u0002\u0002\u0002\u0002A\u0003\u0002\u0002",
    "\u0002\u0002C\u0003\u0002\u0002\u0002\u0002E\u0003\u0002\u0002\u0002",
    "\u0002G\u0003\u0002\u0002\u0002\u0002M\u0003\u0002\u0002\u0002\u0002",
    "O\u0003\u0002\u0002\u0002\u0003Q\u0003\u0002\u0002\u0002\u0005S\u0003",
    "\u0002\u0002\u0002\u0007U\u0003\u0002\u0002\u0002\tW\u0003\u0002\u0002",
    "\u0002\u000bZ\u0003\u0002\u0002\u0002\r]\u0003\u0002\u0002\u0002\u000f",
    "i\u0003\u0002\u0002\u0002\u0011n\u0003\u0002\u0002\u0002\u0013p\u0003",
    "\u0002\u0002\u0002\u0015r\u0003\u0002\u0002\u0002\u0017t\u0003\u0002",
    "\u0002\u0002\u0019v\u0003\u0002\u0002\u0002\u001bx\u0003\u0002\u0002",
    "\u0002\u001dz\u0003\u0002\u0002\u0002\u001f|\u0003\u0002\u0002\u0002",
    "!~\u0003\u0002\u0002\u0002#\u0080\u0003\u0002\u0002\u0002%\u0082\u0003",
    "\u0002\u0002\u0002\'\u0084\u0003\u0002\u0002\u0002)\u0086\u0003\u0002",
    "\u0002\u0002+\u0089\u0003\u0002\u0002\u0002-\u008b\u0003\u0002\u0002",
    "\u0002/\u008e\u0003\u0002\u0002\u00021\u0091\u0003\u0002\u0002\u0002",
    "3\u0094\u0003\u0002\u0002\u00025\u0097\u0003\u0002\u0002\u00027\u009a",
    "\u0003\u0002\u0002\u00029\u009c\u0003\u0002\u0002\u0002;\u009e\u0003",
    "\u0002\u0002\u0002=\u00a4\u0003\u0002\u0002\u0002?\u00b2\u0003\u0002",
    "\u0002\u0002A\u00b6\u0003\u0002\u0002\u0002C\u00bf\u0003\u0002\u0002",
    "\u0002E\u00c4\u0003\u0002\u0002\u0002G\u00c8\u0003\u0002\u0002\u0002",
    "I\u00ce\u0003\u0002\u0002\u0002K\u00da\u0003\u0002\u0002\u0002M\u00de",
    "\u0003\u0002\u0002\u0002O\u00e4\u0003\u0002\u0002\u0002QR\u0007=\u0002",
    "\u0002R\u0004\u0003\u0002\u0002\u0002ST\u0007A\u0002\u0002T\u0006\u0003",
    "\u0002\u0002\u0002UV\u0007<\u0002\u0002V\b\u0003\u0002\u0002\u0002W",
    "X\u0007K\u0002\u0002XY\u0007H\u0002\u0002Y\n\u0003\u0002\u0002\u0002",
    "Z[\u0007\u5984\u0002\u0002[\\\u0007\u679e\u0002\u0002\\\f\u0003\u0002",
    "\u0002\u0002]^\u0007T\u0002\u0002^_\u0007g\u0002\u0002_`\u0007h\u0002",
    "\u0002`a\u0007V\u0002\u0002ab\u0007g\u0002\u0002bc\u0007o\u0002\u0002",
    "cd\u0007r\u0002\u0002de\u0007n\u0002\u0002ef\u0007c\u0002\u0002fg\u0007",
    "v\u0002\u0002gh\u0007g\u0002\u0002h\u000e\u0003\u0002\u0002\u0002ij",
    "\u0007\u6a23\u0002\u0002jk\u0007\u6781\u0002\u0002kl\u0007\u516e\u0002",
    "\u0002lm\u0007\u5f11\u0002\u0002m\u0010\u0003\u0002\u0002\u0002no\u0007",
    "?\u0002\u0002o\u0012\u0003\u0002\u0002\u0002pq\u0007*\u0002\u0002q\u0014",
    "\u0003\u0002\u0002\u0002rs\u0007\uff0a\u0002\u0002s\u0016\u0003\u0002",
    "\u0002\u0002tu\u0007+\u0002\u0002u\u0018\u0003\u0002\u0002\u0002vw\u0007",
    "\uff0b\u0002\u0002w\u001a\u0003\u0002\u0002\u0002xy\u0007.\u0002\u0002",
    "y\u001c\u0003\u0002\u0002\u0002z{\u0007\uff0e\u0002\u0002{\u001e\u0003",
    "\u0002\u0002\u0002|}\u0007,\u0002\u0002} \u0003\u0002\u0002\u0002~\u007f",
    "\u00071\u0002\u0002\u007f\"\u0003\u0002\u0002\u0002\u0080\u0081\u0005",
    "7\u001c\u0002\u0081$\u0003\u0002\u0002\u0002\u0082\u0083\u00059\u001d",
    "\u0002\u0083&\u0003\u0002\u0002\u0002\u0084\u0085\u0007@\u0002\u0002",
    "\u0085(\u0003\u0002\u0002\u0002\u0086\u0087\u0007@\u0002\u0002\u0087",
    "\u0088\u0007?\u0002\u0002\u0088*\u0003\u0002\u0002\u0002\u0089\u008a",
    "\u0007>\u0002\u0002\u008a,\u0003\u0002\u0002\u0002\u008b\u008c\u0007",
    ">\u0002\u0002\u008c\u008d\u0007?\u0002\u0002\u008d.\u0003\u0002\u0002",
    "\u0002\u008e\u008f\u0007?\u0002\u0002\u008f\u0090\u0007?\u0002\u0002",
    "\u00900\u0003\u0002\u0002\u0002\u0091\u0092\u0007#\u0002\u0002\u0092",
    "\u0093\u0007?\u0002\u0002\u00932\u0003\u0002\u0002\u0002\u0094\u0095",
    "\u0007(\u0002\u0002\u0095\u0096\u0007(\u0002\u0002\u00964\u0003\u0002",
    "\u0002\u0002\u0097\u0098\u0007~\u0002\u0002\u0098\u0099\u0007~\u0002",
    "\u0002\u00996\u0003\u0002\u0002\u0002\u009a\u009b\u0007-\u0002\u0002",
    "\u009b8\u0003\u0002\u0002\u0002\u009c\u009d\u0007/\u0002\u0002\u009d",
    ":\u0003\u0002\u0002\u0002\u009e\u009f\u0007p\u0002\u0002\u009f\u00a0",
    "\u0007w\u0002\u0002\u00a0\u00a1\u0007n\u0002\u0002\u00a1\u00a2\u0007",
    "n\u0002\u0002\u00a2<\u0003\u0002\u0002\u0002\u00a3\u00a5\t\u0002\u0002",
    "\u0002\u00a4\u00a3\u0003\u0002\u0002\u0002\u00a5\u00a6\u0003\u0002\u0002",
    "\u0002\u00a6\u00a4\u0003\u0002\u0002\u0002\u00a6\u00a7\u0003\u0002\u0002",
    "\u0002\u00a7\u00a9\u0003\u0002\u0002\u0002\u00a8\u00aa\u00070\u0002",
    "\u0002\u00a9\u00a8\u0003\u0002\u0002\u0002\u00a9\u00aa\u0003\u0002\u0002",
    "\u0002\u00aa\u00ae\u0003\u0002\u0002\u0002\u00ab\u00ad\t\u0002\u0002",
    "\u0002\u00ac\u00ab\u0003\u0002\u0002\u0002\u00ad\u00b0\u0003\u0002\u0002",
    "\u0002\u00ae\u00ac\u0003\u0002\u0002\u0002\u00ae\u00af\u0003\u0002\u0002",
    "\u0002\u00af>\u0003\u0002\u0002\u0002\u00b0\u00ae\u0003\u0002\u0002",
    "\u0002\u00b1\u00b3\t\u0003\u0002\u0002\u00b2\u00b1\u0003\u0002\u0002",
    "\u0002\u00b3\u00b4\u0003\u0002\u0002\u0002\u00b4\u00b2\u0003\u0002\u0002",
    "\u0002\u00b4\u00b5\u0003\u0002\u0002\u0002\u00b5@\u0003\u0002\u0002",
    "\u0002\u00b6\u00ba\t\u0004\u0002\u0002\u00b7\u00b9\n\u0005\u0002\u0002",
    "\u00b8\u00b7\u0003\u0002\u0002\u0002\u00b9\u00bc\u0003\u0002\u0002\u0002",
    "\u00ba\u00b8\u0003\u0002\u0002\u0002\u00ba\u00bb\u0003\u0002\u0002\u0002",
    "\u00bb\u00bd\u0003\u0002\u0002\u0002\u00bc\u00ba\u0003\u0002\u0002\u0002",
    "\u00bd\u00be\t\u0004\u0002\u0002\u00beB\u0003\u0002\u0002\u0002\u00bf",
    "\u00c0\u0007}\u0002\u0002\u00c0\u00c1\u0005K&\u0002\u00c1\u00c2\u0007",
    "\u007f\u0002\u0002\u00c2\u00c3\u0007#\u0002\u0002\u00c3D\u0003\u0002",
    "\u0002\u0002\u00c4\u00c5\u0007]\u0002\u0002\u00c5\u00c6\u0005I%\u0002",
    "\u00c6\u00c7\u0007_\u0002\u0002\u00c7F\u0003\u0002\u0002\u0002\u00c8",
    "\u00c9\u0007a\u0002\u0002\u00c9\u00ca\u0007B\u0002\u0002\u00ca\u00cb",
    "\u0003\u0002\u0002\u0002\u00cb\u00cc\u0005I%\u0002\u00ccH\u0003\u0002",
    "\u0002\u0002\u00cd\u00cf\t\u0006\u0002\u0002\u00ce\u00cd\u0003\u0002",
    "\u0002\u0002\u00cf\u00d0\u0003\u0002\u0002\u0002\u00d0\u00ce\u0003\u0002",
    "\u0002\u0002\u00d0\u00d1\u0003\u0002\u0002\u0002\u00d1\u00d3\u0003\u0002",
    "\u0002\u0002\u00d2\u00d4\t\u0002\u0002\u0002\u00d3\u00d2\u0003\u0002",
    "\u0002\u0002\u00d4\u00d5\u0003\u0002\u0002\u0002\u00d5\u00d3\u0003\u0002",
    "\u0002\u0002\u00d5\u00d6\u0003\u0002\u0002\u0002\u00d6J\u0003\u0002",
    "\u0002\u0002\u00d7\u00d9\n\u0007\u0002\u0002\u00d8\u00d7\u0003\u0002",
    "\u0002\u0002\u00d9\u00dc\u0003\u0002\u0002\u0002\u00da\u00d8\u0003\u0002",
    "\u0002\u0002\u00da\u00db\u0003\u0002\u0002\u0002\u00dbL\u0003\u0002",
    "\u0002\u0002\u00dc\u00da\u0003\u0002\u0002\u0002\u00dd\u00df\t\b\u0002",
    "\u0002\u00de\u00dd\u0003\u0002\u0002\u0002\u00df\u00e0\u0003\u0002\u0002",
    "\u0002\u00e0\u00de\u0003\u0002\u0002\u0002\u00e0\u00e1\u0003\u0002\u0002",
    "\u0002\u00e1\u00e2\u0003\u0002\u0002\u0002\u00e2\u00e3\b\'\u0002\u0002",
    "\u00e3N\u0003\u0002\u0002\u0002\u00e4\u00e6\u0007&\u0002\u0002\u00e5",
    "\u00e7\t\t\u0002\u0002\u00e6\u00e5\u0003\u0002\u0002\u0002\u00e7\u00e8",
    "\u0003\u0002\u0002\u0002\u00e8\u00e6\u0003\u0002\u0002\u0002\u00e8\u00e9",
    "\u0003\u0002\u0002\u0002\u00e9\u00ea\u0003\u0002\u0002\u0002\u00ea\u00eb",
    "\u0007&\u0002\u0002\u00ebP\u0003\u0002\u0002\u0002\r\u0002\u00a6\u00a9",
    "\u00ae\u00b4\u00ba\u00d0\u00d5\u00da\u00e0\u00e8\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function FormulaTSLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

FormulaTSLexer.prototype = Object.create(antlr4.Lexer.prototype);
FormulaTSLexer.prototype.constructor = FormulaTSLexer;

Object.defineProperty(FormulaTSLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

FormulaTSLexer.EOF = antlr4.Token.EOF;
FormulaTSLexer.T__0 = 1;
FormulaTSLexer.T__1 = 2;
FormulaTSLexer.T__2 = 3;
FormulaTSLexer.T__3 = 4;
FormulaTSLexer.T__4 = 5;
FormulaTSLexer.T__5 = 6;
FormulaTSLexer.T__6 = 7;
FormulaTSLexer.T__7 = 8;
FormulaTSLexer.T__8 = 9;
FormulaTSLexer.T__9 = 10;
FormulaTSLexer.T__10 = 11;
FormulaTSLexer.T__11 = 12;
FormulaTSLexer.T__12 = 13;
FormulaTSLexer.T__13 = 14;
FormulaTSLexer.OPERATE_multiply = 15;
FormulaTSLexer.OPERATE_DIVIDE = 16;
FormulaTSLexer.OPERATE_PLUS = 17;
FormulaTSLexer.OPERATE_MINUS = 18;
FormulaTSLexer.OPERATE_GREATE = 19;
FormulaTSLexer.OPERATE_GREATE_EQ = 20;
FormulaTSLexer.OPERATE_LESS = 21;
FormulaTSLexer.OPERATE_LESS_EQ = 22;
FormulaTSLexer.OPERATE_EQ = 23;
FormulaTSLexer.OPERATE_NEQ = 24;
FormulaTSLexer.OPERATE_AND = 25;
FormulaTSLexer.OPERATE_OR = 26;
FormulaTSLexer.NULL = 27;
FormulaTSLexer.NUMBER = 28;
FormulaTSLexer.FORMULANAME = 29;
FormulaTSLexer.STRING = 30;
FormulaTSLexer.RefSheet = 31;
FormulaTSLexer.CELLLoc = 32;
FormulaTSLexer.CELLTPLLoc = 33;
FormulaTSLexer.WS = 34;
FormulaTSLexer.CONSTVAR = 35;

FormulaTSLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

FormulaTSLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

FormulaTSLexer.prototype.literalNames = [ null, "';'", "'?'", "':'", "'IF'", 
                                          "'\u5982\u679C'", "'RefTemplate'", 
                                          "'\u6A21\u677F\u516C\u5F0F'", 
                                          "'='", "'('", "'\uFF08'", "')'", 
                                          "'\uFF09'", "','", "'\uFF0C'", 
                                          "'*'", "'/'", null, null, "'>'", 
                                          "'>='", "'<'", "'<='", "'=='", 
                                          "'!='", "'&&'", "'||'", "'null'" ];

FormulaTSLexer.prototype.symbolicNames = [ null, null, null, null, null, 
                                           null, null, null, null, null, 
                                           null, null, null, null, null, 
                                           "OPERATE_multiply", "OPERATE_DIVIDE", 
                                           "OPERATE_PLUS", "OPERATE_MINUS", 
                                           "OPERATE_GREATE", "OPERATE_GREATE_EQ", 
                                           "OPERATE_LESS", "OPERATE_LESS_EQ", 
                                           "OPERATE_EQ", "OPERATE_NEQ", 
                                           "OPERATE_AND", "OPERATE_OR", 
                                           "NULL", "NUMBER", "FORMULANAME", 
                                           "STRING", "RefSheet", "CELLLoc", 
                                           "CELLTPLLoc", "WS", "CONSTVAR" ];

FormulaTSLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", 
                                       "T__5", "T__6", "T__7", "T__8", "T__9", 
                                       "T__10", "T__11", "T__12", "T__13", 
                                       "OPERATE_multiply", "OPERATE_DIVIDE", 
                                       "OPERATE_PLUS", "OPERATE_MINUS", 
                                       "OPERATE_GREATE", "OPERATE_GREATE_EQ", 
                                       "OPERATE_LESS", "OPERATE_LESS_EQ", 
                                       "OPERATE_EQ", "OPERATE_NEQ", "OPERATE_AND", 
                                       "OPERATE_OR", "FlagPlus", "FlagSub", 
                                       "NULL", "NUMBER", "FORMULANAME", 
                                       "STRING", "RefSheet", "CELLLoc", 
                                       "CELLTPLLoc", "CELLNum", "SheetName", 
                                       "WS", "CONSTVAR" ];

FormulaTSLexer.prototype.grammarFileName = "FormulaTS.g4";


exports.FormulaTSLexer = FormulaTSLexer;

